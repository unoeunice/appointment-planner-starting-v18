{"ast":null,"code":"var _jsxFileName = \"/Users/eunicesung/Desktop/appointment-planner-starting-v18/src/containers/contactsPage/ContactsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { ContactForm } from \"../../components/contactForm/ContactForm\";\nimport { TileList } from \"../../components/tileList/TileList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ContactsPage = _ref => {\n  _s();\n  let {\n    contact,\n    addContact\n  } = _ref;\n  const [name, setName] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [duplicateName, setDuplicateName] = useState(false);\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    /*setState({[e.target.name]:e.target.value})*/\n\n    /*\r\n    Add contact info and clear data\r\n    if the contact name is not a duplicate\r\n    */\n\n    if (duplicateName === false) {\n      addContact(name, phone, email);\n    } else {\n      return;\n    }\n    setName(\"\");\n    setPhone(\"\");\n    setEmail(\"\");\n  };\n  useEffect(() => {\n    if (Object.values(contact).includes(name)) {\n      setDuplicateName(true);\n    } else {\n      setDuplicateName(false);\n    }\n  }, name);\n\n  /*\r\n  Using hooks, check for contact name in the \r\n  contacts array variable in props\r\n  */\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add Contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ContactForm, {\n        handleSubmit: handleSubmit,\n        name: name,\n        phone: phone,\n        email: email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Contacts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TileList, {\n        tile: contact\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n_s(ContactsPage, \"wU3+8Y+SVrhiOVibmGNVLFeZnYw=\");\n_c = ContactsPage;\nvar _c;\n$RefreshReg$(_c, \"ContactsPage\");","map":{"version":3,"names":["React","useState","useEffect","ContactForm","TileList","jsxDEV","_jsxDEV","ContactsPage","_ref","_s","contact","addContact","name","setName","phone","setPhone","email","setEmail","duplicateName","setDuplicateName","handleSubmit","e","preventDefault","Object","values","includes","children","fileName","_jsxFileName","lineNumber","columnNumber","tile","_c","$RefreshReg$"],"sources":["/Users/eunicesung/Desktop/appointment-planner-starting-v18/src/containers/contactsPage/ContactsPage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nimport { ContactForm } from \"../../components/contactForm/ContactForm\";\r\nimport { TileList } from \"../../components/tileList/TileList\";\r\n\r\nexport const ContactsPage = ({\r\n  contact,\r\n  addContact\r\n\r\n\r\n}) => {\r\n\r\n\r\n\r\n\r\nconst[name,setName]=useState(\"\")\r\nconst[phone,setPhone]=useState(\"\")\r\nconst[email,setEmail]=useState(\"\")\r\n\r\n\r\nconst[duplicateName,setDuplicateName]=useState(false)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    \r\n    /*setState({[e.target.name]:e.target.value})*/\r\n    \r\n    /*\r\n    Add contact info and clear data\r\n    if the contact name is not a duplicate\r\n    */\r\n  \r\n\r\n    if(duplicateName===false){\r\n   \r\n      addContact(name,phone,email)\r\n\r\n    }else{\r\n\r\n     return \r\n\r\n    }\r\n\r\n    setName(\"\")\r\n    setPhone(\"\")\r\n    setEmail(\"\")\r\n    \r\n    \r\n\r\n  };\r\n\r\n\r\n  useEffect(()=>{\r\n\r\n\r\n\r\n    if(Object.values(contact).includes(name)){\r\n\r\n     \r\n   \r\n     setDuplicateName(true);\r\n   \r\n    }else{\r\n   \r\n     setDuplicateName(false)\r\n   \r\n    }\r\n     \r\n   \r\n   },name) \r\n  \r\n  /*\r\n  Using hooks, check for contact name in the \r\n  contacts array variable in props\r\n  */\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <section>\r\n\r\n        <h2>Add Contact</h2> \r\n        <ContactForm \r\n          handleSubmit={handleSubmit} name={name} phone={phone} email={email}/>\r\n      </section>\r\n      <hr />\r\n      <section>\r\n        <h2>Contacts</h2>\r\n        <TileList tile={contact} />\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAElD,SAASC,WAAW,QAAQ,0CAA0C;AACtE,SAASC,QAAQ,QAAQ,oCAAoC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9D,OAAO,MAAMC,YAAY,GAAGC,IAAA,IAKtB;EAAAC,EAAA;EAAA,IALuB;IAC3BC,OAAO;IACPC;EAGF,CAAC,GAAAH,IAAA;EAKD,MAAK,CAACI,IAAI,EAACC,OAAO,CAAC,GAACZ,QAAQ,CAAC,EAAE,CAAC;EAChC,MAAK,CAACa,KAAK,EAACC,QAAQ,CAAC,GAACd,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAK,CAACe,KAAK,EAACC,QAAQ,CAAC,GAAChB,QAAQ,CAAC,EAAE,CAAC;EAGlC,MAAK,CAACiB,aAAa,EAACC,gBAAgB,CAAC,GAAClB,QAAQ,CAAC,KAAK,CAAC;EAQnD,MAAMmB,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,EAAE;;IAElB;;IAEA;AACJ;AACA;AACA;;IAGI,IAAGJ,aAAa,KAAG,KAAK,EAAC;MAEvBP,UAAU,CAACC,IAAI,EAACE,KAAK,EAACE,KAAK,CAAC;IAE9B,CAAC,MAAI;MAEJ;IAED;IAEAH,OAAO,CAAC,EAAE,CAAC;IACXE,QAAQ,CAAC,EAAE,CAAC;IACZE,QAAQ,CAAC,EAAE,CAAC;EAId,CAAC;EAGDf,SAAS,CAAC,MAAI;IAIZ,IAAGqB,MAAM,CAACC,MAAM,CAACd,OAAO,CAAC,CAACe,QAAQ,CAACb,IAAI,CAAC,EAAC;MAIxCO,gBAAgB,CAAC,IAAI,CAAC;IAEvB,CAAC,MAAI;MAEJA,gBAAgB,CAAC,KAAK,CAAC;IAExB;EAGD,CAAC,EAACP,IAAI,CAAC;;EAER;AACF;AACA;AACA;;EAKE,oBACEN,OAAA;IAAAoB,QAAA,gBACEpB,OAAA;MAAAoB,QAAA,gBAEEpB,OAAA;QAAAoB,QAAA,EAAI;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,eACpBxB,OAAA,CAACH,WAAW;QACViB,YAAY,EAAEA,YAAa;QAACR,IAAI,EAAEA,IAAK;QAACE,KAAK,EAAEA,KAAM;QAACE,KAAK,EAAEA;MAAM;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAE;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC/D,eACVxB,OAAA;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,eACNxB,OAAA;MAAAoB,QAAA,gBACEpB,OAAA;QAAAoB,QAAA,EAAI;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,eACjBxB,OAAA,CAACF,QAAQ;QAAC2B,IAAI,EAAErB;MAAQ;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACnB;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACN;AAEV,CAAC;AAACrB,EAAA,CA/FWF,YAAY;AAAAyB,EAAA,GAAZzB,YAAY;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}